import { NextPage } from "next"
import ContractValue from "./contractValue";
import { kuber, txHex } from "./api/kuber";
// import { useWallet } from "@martifylabs/mesh-react";
import { getUtxos } from "./api/apiManager";
import {Kuber, CIP30Wallet}  from '../../kuber-client-js/src'
import { CIP30Instance } from "../../kuber-client-js/src/types";
import { callKuberAndSubmit} from "kuber-client"

const Redeem: NextPage = () =>{
    // const { wallet, connected } = useWallet();
      
    let inputs: { script: any; 
                  utxo: any; 
                  redeemer: { constructor: number; 
                              fields: never[]; } 
                }[] = []                              
    async function redeem(this: any, val: number){
        try{
        const value =val
        const kuber=new Kuber('https://preview.kuberide.com')
        const providers = CIP30Wallet.listProviders();
        if(!providers){
            alert('Wallet Not detected. Install Compatible cip-30 compatible wallet')
            return
        }
        let provider=providers[1];
        console.log("Provider Name"+provider.name);
        const wallet= await provider.enable()
        const allUtxos= await getUtxos("addr_test1wp34y3rwkf5wgfc32wcwguvlr3wzr9fhj5hw6sk0mul9k5q4pr369")
        const parsedJson = JSON.parse(JSON.stringify(allUtxos))
        const utxos:any = []
        parsedJson.utxos.forEach((utxo:any) => {
            utxos.push(utxo.tx_hash)
        })
        console.log(JSON.stringify(utxos))
        utxos.forEach((tx_hash:any)=>{
            inputs.push({
                "utxo": tx_hash,
                "script":{
                    "cborHex": "590c50590c4d01000033232323232323233223232323232323232323322323322323232323232323232323322323232323232323222223232533532323232533553353300e500150021333573466e20cccd54c05848004cd405c888c00cc0080048004894cd4c8c8d400888d400c88c8cd40148cd401094cd4ccd5cd19b8f00200103903815003103820382335004203825335333573466e3c0080040e40e05400c40e054cd400c854cd400884cd40088cd40088cd40088cd40088cc09800800480ec8cd400880ec8cc0980080048880ec888cd401080ec8894cd4ccd5cd19b8700600303e03d15335333573466e1c0140080f80f44cc07801000440f440f440d854cd4004840d840d8cc07cc0b4d54cd4d401c88d4008888888888888cccd4034940d0940d0940d08ccd54c0a048004cd40a4894cd40088400c400540d08d4004894cd54cd4ccd5cd19b8f350022200235004220020430421333573466e1cd400888004d40108800410c10841084d40e000c540dc03484d400488d40048888d401088cd40088c0f9262335503f00100513034498880094094d400888880104cdc00009998069a8011111001808808880099aa98068900091a800910009aa8019111111111110062400066e01400540080b40b840b440b84cd5ce2490c4e6f742053706c69747465640002d133300a33355301112001500f501f3300b3500922002500200e00e133300933355301012001500e501e3300a3500822001500100d00d135001220023333573466e1cd55cea80124000466442466002006004646464646464646464646464646666ae68cdc39aab9d500c480008cccccccccccc88888888888848cccccccccccc00403403002c02802402001c01801401000c008cd4090094d5d0a80619a8120129aba1500b33502402635742a014666aa052eb940a0d5d0a804999aa814bae502835742a01066a0480646ae85401cccd540a40cdd69aba150063232323333573466e1cd55cea801240004664424660020060046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40f9d69aba15002303f357426ae8940088c98c811ccd5ce02102382289aab9e5001137540026ae854008c8c8c8cccd5cd19b8735573aa004900011991091980080180119a81f3ad35742a004607e6ae84d5d1280111931902399ab9c042047045135573ca00226ea8004d5d09aba2500223263204333573807c08608226aae7940044dd50009aba1500533502475c6ae854010ccd540a40bc8004d5d0a801999aa814bae200135742a00460626ae84d5d1280111931901f99ab9c03a03f03d135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d55cf280089baa00135742a00460426ae84d5d1280111931901899ab9c02c03102f10301326320303357389210350543500030135573ca00226ea8004888c8c8c004014c8004d540b888cd400520002235002225335333573466e3c0080240b40b04c01c0044c01800cc8004d540b488cd400520002235002225335333573466e3c00801c0b00ac40044c01800c88d4004888888888888ccd54c0504800488d40088888d401088cd400894cd4ccd5cd19b8f017001039038133502a00600810082008502200a320013550282211225335001150172213350183004002335530061200100400122333573466e1c0080040880852210012233553007120012350012233550270023355300a1200123500122335502a00233350012330294800000488cc0a80080048cc0a400520000013355300712001235001223355027002333500123355300b1200123500122335502b00235500d0010012233355500800f00200123355300b1200123500122335502b00235500c00100133355500300a002001111222333553004120015011335530071200123500122335502700235500900133355300412001223500222533533355300c120013233500e223335003220020020013500122001123300122533500210271001024235001223300a00200500610031335015004003501200133553007120012350012232335502800330010053200135502a225335001135500a003221350022253353300c002008112223300200a0041300600300232001355023221122253350011002221330050023335530071200100500400111212223003004112122230010043200135502022112253350011500f221335010300400233553006120010040013200135501f2211222533500113500322001221333500522002300400233355300712001005004001122123300100300222333573466e3c00800406005c48c88c008dd6000990009aa80e911999aab9f0012500b233500a30043574200460066ae880080788c8c8cccd5cd19b8735573aa004900011991091980080180118079aba150023005357426ae8940088c98c8078cd5ce00c80f00e09aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119805980c1aba15002335010017357426ae8940088c98c808ccd5ce00f01181089aab9e5001137540026ae854010ccd54025d728041aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6404a66ae7008009408c0880844d55cea80089baa00135742a00466a018eb8d5d09aba2500223263201f33573803403e03a26ae8940044d5d1280089aab9e500113754002442466002006004266aa002eb9d6889119118011bab00132001355019223233335573e0044a010466a00e66aa034600c6aae754008c014d55cf280118021aba200301b13574200222440042442446600200800624464646666ae68cdc3a800a400046a00e600a6ae84d55cf280191999ab9a3370ea00490011280391931900c99ab9c014019017016135573aa00226ea800448488c00800c44880048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900b99ab9c012017015014013012135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900999ab9c00e013011135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8044cd5ce00600880789baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c8068cd5ce00a80d00c00b80b00a80a00980909aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6402666ae7003804c0440404d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c014dd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263201033573801602001c01a26aae7540044dd50009091180080189119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6402066ae7002c0400380340304d55cea80089baa0012323333573466e1d40052002200523333573466e1d40092000200523263200c33573800e01801401226aae74dd5000891001091000a48103505431002233700004002464c6400866ae712401024c67000041122123300100300249848004448c8c00400488cc00cc008008004cd4488cc00922011c7a1513f53986fe8f52ca8addd48a390edb6cdf417d7b722c226e95880048811c7e36a4c8da9c6ffaa842d69432c3008b76dd7a338111c55abe958dcc0022123300100300220011",
                    "description": "funds",
                    "type": "PlutusScriptV2"
                    }, 
                "redeemer": {
                    "constructor": 0,
                    "fields": []
                }
                })
        })
        console.log("Inputs"+ JSON.stringify(inputs));
        const body = {
            "outputs": [
                {
                  "address": "addr_test1qpap2yl48xr0ar6je29dm4y28y8dkmxlg97hku3vyfhftzprkwpajej8f9xuarfzz4uhgez0j6xd8jqf8xwg2lz2mewqvurvgd",
                  "value": (value*1000000)/2
                },
                {
                  "address": "addr_test1qplrdfxgm2wxl74ggttfgvkrqz9hdht6xwq3r326h62cmn989k5m8uprgt299v2080aga7uqqkutycf97stwtskk40nskerus4",
                  "value": (value*1000000)/2
                }
              ],
            "inputs": inputs
        };
        return callKuberAndSubmit(wallet.instance as any,'https://preview.kuberide.com', JSON.stringify(body) )
        // return kuber.buildWithProvider(await wallet, {
        //     "outputs": [
        //         {
        //           "address": "addr_test1qpap2yl48xr0ar6je29dm4y28y8dkmxlg97hku3vyfhftzprkwpajej8f9xuarfzz4uhgez0j6xd8jqf8xwg2lz2mewqvurvgd",
        //           "value": (value*1000000)/2
        //         },
        //         {
        //           "address": "addr_test1qplrdfxgm2wxl74ggttfgvkrqz9hdht6xwq3r326h62cmn989k5m8uprgt299v2080aga7uqqkutycf97stwtskk40nskerus4",
        //           "value": (value*1000000)/2
        //         }
        //       ],
        //     "inputs": inputs
        // }).then(async tx=>{    
        //     (await wallet).signAndSubmit(tx)
        // }).catch(e=>{
        //     window.alert((e && e.message) || e)
        // })
        } 
        catch(error){
            window.alert(error)
        }
    }
    function getValue(){
        let valElement = document.getElementById('my-value')?.innerHTML ?? '0'
        const val=parseInt(valElement)
        console.log(val);
        return val
    }
    return(
        <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>
            <h3>Are you sure you want to redeem?</h3>
             current script value is : 
             <div style={{display:'flex', flexDirection:'row', alignItems:'center'}}>
                <ContractValue/> <h3 style={{color:'blue'}}>₳</h3>    
             </div>
            <div style={{display:'flex',paddingTop:'12px'}}>
                <button color="Green" style={{width:'80px', height:'30px', margin:'10px'}} onClick={async()=>{
                    const val = getValue()
                    await redeem(val)
                }}>Yes</button>
            </div>
        </div>
    );
}
export default Redeem